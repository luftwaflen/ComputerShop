// <auto-generated />
using ComputerShopData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ComputerShopData.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230517170933_InitialDb")]
    partial class InitialDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("ComponentEntityTagEntity", b =>
                {
                    b.Property<int>("ComponentTagsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TagComponentsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ComponentTagsId", "TagComponentsId");

                    b.HasIndex("TagComponentsId");

                    b.ToTable("ComponentEntityTagEntity");
                });

            modelBuilder.Entity("ComputerShopData.Entities.ComponentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Coast")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Components");
                });

            modelBuilder.Entity("ComputerShopData.Entities.TagEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("ComponentEntityTagEntity", b =>
                {
                    b.HasOne("ComputerShopData.Entities.TagEntity", null)
                        .WithMany()
                        .HasForeignKey("ComponentTagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComputerShopData.Entities.ComponentEntity", null)
                        .WithMany()
                        .HasForeignKey("TagComponentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
